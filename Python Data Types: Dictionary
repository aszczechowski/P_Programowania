# 1. Write a Python script to add a key to a dictionary.
sample_dict = {0: 10, 1: 20}
sample_dict[2] = 30
print("Updated Dictionary:", sample_dict)


# 2. Write a Python script to check whether a given key already exists in a dictionary.
def check_key_exists(dictionary, key):
    return key in dictionary
sample_dict = {0: 10, 1: 20, 2: 30}
key_to_check = 1
if check_key_exists(sample_dict, key_to_check):
    print(f"The key {key_to_check} exists in the dictionary.")
else:
    print(f"The key {key_to_check} does not exist in the dictionary.")


# 3. Write a Python script to sort (ascending and descending) a dictionary by value.
def sort_dict_ascending(input_dict):
    return dict(sorted(input_dict.items(), key=lambda item: item[1]))

def sort_dict_descending(input_dict):
    return dict(sorted(input_dict.items(), key=lambda item: item[1], reverse=True))

sample_dict = {'a': 3, 'b': 1, 'c': 2}

sorted_dict_asc = sort_dict_ascending(sample_dict)
print("Sorted Dictionary (Ascending):", sorted_dict_asc)

sorted_dict_desc = sort_dict_descending(sample_dict)
print("Sorted Dictionary (Descending):", sorted_dict_desc)


# 4. Write a Python script to merge two Python dictionaries.
def merge_dicts(dict1, dict2):
    merged_dict = dict1.copy()  
    merged_dict.update(dict2)   
    return merged_dict
dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}
merged_dict = merge_dicts(dict1, dict2)

print("Merged dictionary:", merged_dict)


# 5. Write a Python program to sum all the items in a dictionary.
def sum_dictionary_values(dictionary):
    total = 0
    for value in dictionary.values():
        total += value
    return total
my_dict = {'a': 110, 'b': 220, 'c': 320}
total_sum = sum_dictionary_values(my_dict)

print("Sum of all items in the dictionary:", total_sum)


# 6. Write a Python program to multiply all the items in a dictionary.
def multiply_dictionary_values(dictionary):
    result = 1
    for value in dictionary.values():
        result *= value
    return result

my_dict = {'a': 2, 'b': 3, 'c': 4}

total_product = multiply_dictionary_values(my_dict)

print("Product of all items in the dictionary:", total_product)


# 7. Write a Python program to remove a key from a dictionary.
def remove_key(dictionary, key):
    if key in dictionary:
        del dictionary[key]
        print(f"Key '{key}' has been successfully removed from the dictionary.")
    else:
        print(f"Key '{key}' does not exist in the dictionary.")
my_dict = {'a': 1, 'b': 2, 'c': 3}

key_to_remove = 'b'

remove_key(my_dict, key_to_remove)

print("Updated dictionary:", my_dict)


# 8. Write a Python program to map two lists into a dictionary.
def map_lists_to_dictionary(keys, values):
    return dict(zip(keys, values))

keys_list = ['a', 'b', 'c']
values_list = [1, 2, 3]

mapped_dict = map_lists_to_dictionary(keys_list, values_list)

print("Mapped dictionary:", mapped_dict)


# 9. Write a Python program to sort a given dictionary by key.
def sort_dict_by_key(dictionary):
    return dict(sorted(dictionary.items()))

my_dict = {'c': 3, 'a': 1, 'b': 2}

sorted_dict = sort_dict_by_key(my_dict)

print("Sorted dictionary by key:", sorted_dict)


# 10. Write a Python program to get the maximum and minimum values of a dictionary.
def get_max_min_values(dictionary):
    max_value = max(dictionary.values())
    min_value = min(dictionary.values())
    return max_value, min_value

my_dict = {'a': 202, 'b': 203, 'c': 2}

max_value, min_value = get_max_min_values(my_dict)

print("Maximum value:", max_value)
print("Minimum value:", min_value)


# 11. Write a Python program to remove duplicates from the dictionary.
def remove_duplicates(dictionary):
    unique_dict = {}
    for key, value in dictionary.items():
        if value not in unique_dict.values():
            unique_dict[key] = value
    return unique_dict

my_dict = {'a': 1, 'b': 1, 'c': 1, 'd': 3, 'e': 9}
print("Original dictionary:", my_dict)
print("Dictionary after removing duplicates:", remove_duplicates(my_dict))


# 12. Write a Python program to find the highest 3 values of corresponding keys in a dictionary.
def highest_three_values(dictionary):
    sorted_items = sorted(dictionary.items(), key=lambda x: x[1], reverse=True)

    top_three = sorted_items[:3]
    
    return top_three

my_dict = {'a': 12, 'b': 39, 'c': 22, 'd': 55, 'e': 41}
print("Dictionary:", my_dict)
print("Top 3 key-value pairs with highest values:", highest_three_values(my_dict))


# 13. Write a Python program to print a dictionary in table format.
def print_dict_as_table(dictionary):
    print("| Key | Value |")
    print("+-----+-------+")
    for key, value in dictionary.items():
        print(f"| {key} | {value} |")

my_dict = {'Name': 'John', 'Age': 30, 'Country': 'USA'}
print_dict_as_table(my_dict)


# 14. Write a Python program to sort a list alphabetically in a dictionary.
def sort_lists_alphabetically(dictionary):
    sorted_dict = {}
    for key, value in dictionary.items():
        sorted_dict[key] = sorted(value)
    return sorted_dict

my_dict = {'a': ['banana', 'apple', 'orange', 'pizza'], 'b': ['grape', 'cherry', 'kiwi']}
sorted_dict = sort_lists_alphabetically(my_dict)
print("Dictionary with lists sorted alphabetically:")
print(sorted_dict)


# 15. Write a Python program to remove spaces from dictionary keys.
def remove_spaces_from_keys(dictionary):
    return {key.replace(" ", ""): value for key, value in dictionary.items()}

my_dict = {'first name': 'Olo', 'last name': 'Wick', 'age far': 30 }
print("Original dictionary:", my_dict)
print("Dictionary with spaces removed from keys:", remove_spaces_from_keys(my_dict))


# 16. Write a Python program to get the key, value and item in a dictionary.
def get_key_value_item(dictionary):
    for key, value in dictionary.items():
        yield key, value, (key, value)

my_dict = {'a': 1, 'b': 'hej', 'c': 30}
for key, value, item in get_key_value_item(my_dict):
    print("Key:", key)
    print("Value:", value)
    print("Item:", item)
    print()


# 17. Write a Python program to find the length of a dictionary of values.
def dictionary_length(dictionary):
    return len(dictionary)

my_dict = {'a': 1, 'b': 2, 'c': 3, 'd': 6}
print("Length of the dictionary:", dictionary_length(my_dict))


# 18.  Write a Python program to count the frequency of a dictionary. Original Dictionary:
#{'V': 10, 'VI': 10, 'VII': 40, 'VIII': 20, 'IX': 70, 'X': 80, 'XI': 40, 'XII': 20}
#Count the frequency of the said dictionary:
#Counter({10: 2, 40: 2, 20: 2, 70: 1, 80: 1})
from collections import Counter

def count_frequency(dictionary):
    return Counter(dictionary.values())

original_dict = {'V': 10, 'VI': 10, 'VII': 40, 'VIII': 20, 'IX': 70, 'X': 80, 'XI': 40, 'XII': 20}

frequency = count_frequency(original_dict)
print("Count the frequency of the said dictionary:")
print(frequency)


# 19. Write a Python program to invert a dictionary with unique hashable values.
# Sample Output:
# {10: 'Theodore', 11: 'Mathew', 9: 'Roxanne'}
def invert_dictionary(dictionary):
    inverted_dict = {value: key for key, value in dictionary.items()}
    return inverted_dict

original_dict = {10: 'Theodore', 11: 'Mathew', 9: 'Roxanne'}

inverted_dict = invert_dictionary(original_dict)
print("Inverted dictionary:")
print(inverted_dict)


# 20. Write a Python program to find the specified number of maximum values in a given dictionary. Original Dictionary:
#{'a': 5, 'b': 14, 'c': 32, 'd': 35, 'e': 24, 'f': 100, 'g': 57, 'h': 8, 'i': 100}
#1 maximum value(s) in the said dictionary:
#['f']
#2 maximum value(s) in the said dictionary:
#['f', 'i']
#5 maximum value(s) in the said dictionary:
#['f', 'i', 'g', 'd', 'c']

def find_max_values(dictionary, num_max):
    sorted_items = sorted(dictionary.items(), key=lambda x: x[1], reverse=True)
    max_values = [item[0] for item in sorted_items[:num_max]]
    return max_values

original_dict = {'a': 5, 'b': 14, 'c': 32, 'd': 35, 'e': 24, 'f': 100, 'g': 57, 'h': 8, 'i': 100}

num_max_values = [1, 2, 5]

for num in num_max_values:
    max_values = find_max_values(original_dict, num)
    print(f"{num} maximum value(s) in the said dictionary:")
    print(max_values)
